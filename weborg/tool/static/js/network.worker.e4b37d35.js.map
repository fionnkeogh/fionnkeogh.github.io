{"version":3,"sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../src/comlink.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","features/reaction_network/network.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_arrayLikeToArray","arr","len","length","arr2","Array","_unsupportedIterableToArray","minLen","toString","slice","constructor","from","test","_slicedToArray","isArray","_i","iterator","_s","_e","_arr","_n","_d","next","done","push","err","TypeError","_defineProperty","obj","configurable","writable","_setPrototypeOf","setPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","Parent","args","Class","a","apply","instance","Function","arguments","_toConsumableArray","iter","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","start","createProxy","target","Error","isError","message","stack","serialized","assign","ep","self","addEventListener","callback","ev","data","returnValue","path","id","type","argumentList","map","fromWireValue","parent","reduce","prop","rawValue","transfer","undefined","Promise","resolve","catch","then","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","proxy","_target","requestResponseMessage","set","_thisArg","rawArgumentList","last","processArguments","processed","v","concat","transferCache","WeakMap","transfers","allowArrayLike","it","F","f","normalCompletion","didErr","step","_e2","handler","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","nodes","edges","generateGraph","species","reactionsAB","_error","reactions","Int8Array","numberOfReactions","node","width","height","color","level","this","reaction","every","item","label","k","edge","source","console","error"],"mappings":"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","file":"static/js/network.worker.e4b37d35.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { expose } from 'comlink';\nimport { EdgeDefinition, NodeDefinition } from 'cytoscape';\n\nexport default {} as typeof Worker & { new (): Worker };\n\nexport type NetworkWorker = {\n    nodes: NodeDefinition[];\n    edges: EdgeDefinition[];\n    generateGraph(species:string[], reactionsAB: ArrayBuffer, callback:(nodes: NodeDefinition[], edges: EdgeDefinition[], error: any | undefined) => void): void;\n}\n\nconst networkAPI: NetworkWorker = {\n    nodes: [],\n    edges: [],\n    generateGraph(species: string[], reactionsAB: ArrayBuffer, callback:(nodes: NodeDefinition[], edges: EdgeDefinition[], error: any | undefined) => void) {\n        let _error: any | undefined = undefined;\n        try {\n            const reactions: number[] = Array.from(new Int8Array(reactionsAB));\n            const numberOfReactions = reactions.length/(species.length*2);\n            \n            for (let i = 0; i < species.length; i++) {\n                const node: NodeDefinition = {\n                    data: {id: species[i], width: 50, height: 20, color: '#000', level:  4},\n                    \n                };\n\n                this.nodes.push(node);\n            }\n            for (let i = 0; i < numberOfReactions; i++) {\n                const reaction = reactions.slice((i*species.length*2), (i*species.length*2)+(species.length*2));\n                let level = 5;\n                if(reaction.slice(species.length).every(item => item === 0)) {\n                    level = 0;\n                } else if(reaction.slice(0,species.length).every(item => item === 0)) {\n                    level = 0;\n                }\n                const node: NodeDefinition = {\n                    data: {id: `${i}`, label: 'reaction', width: 50, height: 20, color: '#000', level: level}\n                };\n\n                this.nodes.push(node);\n            }\n\n            let iter = 0;\n            for (let i = 0; i < reactions.length; i += (species.length*2)) {\n                const reaction = reactions.slice(i, i+(species.length*2));\n                for (let k = 0; k < reaction.length; k++) {\n                    const edge: EdgeDefinition = {data: {id: `R${reaction[k]}${i}${iter++}`, label: `${reaction[k] !== 1 ? reaction[k] : ''}`, source: '', target: ''}};\n                    if(k < species.length) {\n                        edge.data.source = species[k];\n                        edge.data.target = `${i/(species.length*2)}`;\n                        edge.data['educts'] = true;\n                        if(reaction.slice(species.length).every(item => item === 0)) {\n                            edge.data['outflow'] = true;\n                        }\n                        if(reaction[k] > 0) {\n                            this.edges.push(edge);\n                        }\n                    } else {\n                        edge.data.source = `${i/(species.length*2)}`;\n                        edge.data.target = species[k-species.length];\n                        edge.data['products'] = true;\n                        if(reaction[k] > 0) {\n                            this.edges.push(edge);\n                        }\n                    }\n                }\n            }\n        } catch(err: any) {\n            _error = err;\n            console.error(err);\n        }\n        callback(this.nodes, this.edges, _error);\n    },\n};\n\nexpose(networkAPI)\n"],"sourceRoot":""}